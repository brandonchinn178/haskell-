{
  "name": "Haskell Syntax",
  "variables": {
    "black": "#2b2a27",
    "gray": "#7f7f7f",
    "white": "#ede0ce",

    "blue": "#729dda",
    "cyan": "#2fbfbf",
    "gold": "#bfa72f",
    "green": "#8dbc2f",
    "olive": "#b1bf6a",
    "orange": "#ff6600",
    "orange_light": "#eea343",
    "periwinkle": "#c6b3ff",
    "purple": "#bf5fbf",
    "salmon": "#ffb399",
    "red": "#dd573c",
    "teal": "#5EBC7D",
    "yellow": "#ffd866",

    // type-level identifiers
    "types": "var(cyan)",
    "type_operators": "var(periwinkle)",

    // value-level identifiers
    "constructors": "var(teal)",
    "constructor_declaration": "color(var(teal) blend(var(green) 60%))",
    "constructor_pattern": "var(olive)",
    "variables": "var(green)",
    "parameter": "var(orange_light)",
    "parameter_type": "var(salmon)",
    "operators": "var(green)",
  },
  "globals": {
    "background": "var(black)",
    "foreground": "var(white)",
    "caret": "var(white)",
    "line_highlight": "color(var(white) alpha(0.1))",

    // Diff
    "line_diff_added": "var(green)",
    "line_diff_modified": "var(yellow)",
    "line_diff_deleted": "var(red)",

    // Selection
    "selection": "var(red)",
    "selection_foreground": "var(white)",
    "selection_border": "var(black)",
  },
  "rules": [
    // Top-level
    { "scope": "comment", "foreground": "var(gray)" },
    { "scope": "keyword", "foreground": "var(red)" },
    { "scope": "keyword.operator", "foreground": "var(operators)" },
    { "scope": "keyword.other.wildcard", "foreground": "var(purple)" },
    { "scope": "entity", "foreground": "var(variables)" },
    { "scope": "storage", "foreground": "var(types)" },
    { "scope": "string", "foreground": "var(purple)" },
    { "scope": "constant", "foreground": "var(blue)" },
    { "scope": "invalid", "foreground": "var(red)" },

    // Pragmas
    {
      "scope": "comment.block.pragma",
      "foreground": "#d78fef",
    },
    {
      "scope": "keyword.other.annotation",
      "foreground": "color(var(purple) blend(var(red) 50%))",
    },
    {
      "scope": "meta.annotation variable",
      "foreground": "var(variables)",
    },

    // Imports + exports
    {
      "scope": "(meta.import, meta.declaration.module) & keyword",
      "foreground": "color(var(gold) blend(var(red) 50%))",
    },
    {
      "scope": "keyword.other.import, keyword.other.export",
      "font_style": "italic",
    },
    {
      "scope": "(meta.import, meta.declaration.module) & punctuation - comment",
      "foreground": "var(gold)",
    },
    {
      "scope": "(meta.import, meta.declaration.module) & variable",
      "foreground": "var(variables)",
    },
    {
      "scope": "(meta.import, meta.declaration.module) & keyword.operator.type",
      "foreground": "var(type_operators)",
    },
    {
      "scope": "keyword.other.wildcard.import, keyword.other.wildcard.export",
      "foreground": "var(green)",
    },
    {
      "scope": "(meta.import.type_members, meta.export.type_members) & punctuation - comment",
      "foreground": "var(green)",
    },
    {
      "scope": "(meta.import.type_members, meta.export.type_members) & (storage, keyword.operator.constructor)",
      "foreground": "var(constructors)",
    },

    // Modules
    {
      "scope": "storage.module, entity.name.namespace",
      "foreground": "var(gold)",
    },

    // Expressions
    {
      "scope": "variable.function.constructor, keyword.operator.constructor.prefix, variable.function.pattern",
      "foreground": "var(constructors)",
    },
    {
      "scope": "variable.other.constructor",
      "foreground": "var(olive)",
    },
    {
      "scope": "variable.other.error",
      "foreground": "var(orange)",
      "font_style": "glow italic",
    },
    {
      "scope": "variable.other.infix",
      "foreground": "var(operators)",
    },
    {
      "scope": "punctuation.section.thquote",
      "foreground": "var(red)",
    },
    {
      "scope": "punctuation.section.list, punctuation.separator.list",
      "foreground": "var(gold)",
    },
    {
      "scope": "punctuation.section.quasiquote",
      "foreground": "var(salmon)",
    },

    // Function parameters
    {
      "scope": "meta.function.parameters variable.other",
      "foreground": "var(parameter)",
    },
    {
      "scope": "meta.function.parameters variable.other.constructor",
      "foreground": "var(constructor_pattern)",
    },
    {
      "scope": "meta.function.parameters variable.other.member",
      "foreground": "var(white)",
    },
    {
      "scope": "meta.function.parameters & (punctuation.section.parens, keyword.other.as_pattern)",
      "foreground": "var(yellow)",
    },

    // Pattern matching
    {
      "scope": "meta.pattern.record punctuation - comment",
      "foreground": "var(constructor_pattern)",
    },
    {
      "scope": "keyword.other.wildcard.record",
      "foreground": "var(parameter)",
    },
    {
      "scope": "meta.pattern keyword.operator.constructor",
      "foreground": "var(constructor_pattern)",
    },

    // Data types
    {
      "scope": "variable.other.type",
      "foreground": "var(parameter_type)",
    },
    {
      "scope": "meta.datatype.record variable.other.member",
      "foreground": "var(teal)",
    },
    {
      "scope": "entity.name.constructor",
      "foreground": "var(constructor_declaration)",
    },
    {
      "scope": "punctuation.section.record, punctuation.separator.record",
      "foreground": "var(constructor_declaration)",
    },
  ],
}
